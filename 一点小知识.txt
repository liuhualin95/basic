1、绝对定位和相对定位的区别
	position：absolute生成绝对定位的元素
	脱离文档流，相对于值不为static的第一个父元素去定位
	position：relative生成相对定位的元素
	没有脱离文档流，相对自身偏移
	补充：其他定位方式fixed、inherit、static
	fixed：生成绝对定位的元素，相对于浏览器窗口进行定位
	inherit：继承父元素的position属性
	static：默认值，没有定位，元素出现在正常文档流
2、浏览器发送cookie服务器接收不到什么原因
	cookie组成有key-value对，域名和路径等；
	服务器接收不到可能是跨域或者域名和路径有错等原因
3、了解哪些web安全问题
	1）xss跨站脚本攻击：利用嵌入脚本窃取cookie值发送恶意请求
	防御方法：对输入数据进行再编码，将其转移过滤后输出
	将会话cookie设置为HttpOnly，无法用脚本访问cookie
	2）SQL注入攻击：通过非法SQL窃取数据库数据的行为
	防御方法：不要动态拼接SQL字符串，尽量过滤用户输入数据
	3）csrf跨站请求伪造：通过伪装来自受信任用户的请求达到目的
	http头中有一个Referer字段，记录了该http请求的来源地址，对其进行验证；
	在请求地址中添加token并验证；在http头中自定义属性并验证
	4）dns劫持如何防御：手动修改DNS；修改路由器密码
	5）CORS跨域的时候传递cookie：设置XHR的withCredentials属性为true，
	服务器端设置Allow-Control-Allow-Credentials为true，使得跨域可以带cookie，
	同时设置Allow-Control-Allow-Origin，此时不能为通配符，必须指定明确的
	与请求网页一致的域名
	6）CORS跨域的时候如何保证安全：用cookie token，但是由于cookie容易被窃取，
	设置cookie为http-only更安全
4、web存储有哪些
	cookie、localStorage、sessionStorage、离线存储
	1）cookie是网站为了标识用户身份而存储在用户本地的数据，
	cookie始终在同源的http请求中携带，在服务器和浏览器间双向传递，
	localStorage和sessionStorage不会自动把数据传给服务器，仅在本地保存
	2）cookie大小限制为4k，localStorage和sessionStorage大小为5M或更大
	3）cookie在设置的过期时间之前数据不会消失，localStorage数据在本地
	长久保存，除非手动删除，sessionStorage数据在浏览器窗口关闭后丢失
	4）离线存储：页面头部加入一个manifest属性，为cache.manifest文件指定
	离线缓存的资源，离线状态时操作window.applicationCache进行需求实现
5、tcp延迟机制
	延迟ack机制：让接收方在接收到数据后不立刻反馈ACK消息，等一小段时间，如果
	之后还有收到其他包就把这些ACK消息一起放入一个包中反馈给客户端。
	因为即使一次发送一个字节的数据，也需要一个几十字节的IP包头来装配。
6、nodejs相关
	nodejs是基于Chrome V8引擎的js运行环境，是服务器端的js。
	优点：事件驱动、非阻塞IO，非常适合处理并发请求；
	缺点：nodejs一直在变，不太稳定，缺少足够多的第三方库的支持。
7、js异步编程的四种方法
	1）回调函数f1(f2);
	优点：容易编写和理解；
	缺点：不利于维护，各个部分之间耦合度较高，流程比较混乱
	2）事件监听f1.on('done',f2);
	事件监听即采用事件驱动模式，任务的执行不取决于代码的顺序，而取决于某个事件是否发生
	优点：可以绑定多个事件指定多个回调函数，可以去耦合，有利于实现模块化
	缺点：整个程序都变成事件驱动型，运行流程不清晰
	3）发布/订阅
	f1:jQuery.publish("done");
	f2:jQuery.subscribe("done",f2);
	假定存在一个"信号中心"，某个任务执行完成，就向信号中心"发布"（publish）一个信号，
	其他任务可以向信号中心"订阅"（subscribe）这个信号，从而知道什么时候自己可以开始执行，
	这就叫做 "发布/订阅模式"（publish-subscribe pattern），又称 "观察者模式" （observer pattern）。
	该方法的性质与"事件监听"类似，但其优势在于可以通过查看"消息中心"，
	了解存在多少信号、每个信号有多少订阅者，从而监控程序的运行。
	4）promise对象 f1().then(f2);
	优点：回调函数是链式写法，流程清晰
8、js异步加载的三种方式：
	1）defer 仅IE能用
	2）async
	3）创建script元素添加到DOM
test